---
- hosts: all
  vars:
    repo_url: https://github.com/Redmar-van-den-Berg/exonviz-web.git
    exonviz_dir: /opt/exonviz
    user: dcrt
    flask_secret_key: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          36363839323964643764623532633665366133663566623932313932346564356262613064346635
          3064366563393163616565626432663066376539383735630a393832383366623830323438316661
          36626234643863353435646235653034343562663637616234386436363732343936366464353462
          3538336165316431640a313165383634623338356532653861613134393635336535313235613466
          32343766393130636434623662633134623133343330323733333531306430376463356361353962
          3762396232623838373161373030643565613937353062356566

  pre_tasks:
    - name: Update APT cache
      become: yes
      apt:
        update_cache: yes
        force_apt_get: yes
  tasks:
    - name: Install packages
      become: yes
      apt:
        name:
          - acl
          - git
          - nginx
          - python3-pip
          - python3-virtualenv
          - python3-setuptools
        state: present

    - name: Set timezone
      become: yes
      community.general.timezone:
        name: Europe/Brussels

    - name: Create dcrt user
      become: yes
      ansible.builtin.user:
        name: "{{ user }}"

    - name: Create exonviz directory
      become: yes
      file:
        path: "{{ exonviz_dir }}"
        state: directory
        mode: '0755'
        owner: "{{ user }}"

    - name: Create virtualenv
      become: yes
      become_user: "{{ user }}"
      # Since we use forcereinstall, the venv always changes to the latest version
      changed_when: true
      ansible.builtin.pip:
        name:
          - "git+{{ repo_url }}"
          - gunicorn
        virtualenv: "{{ exonviz_dir }}/venv"
        state: forcereinstall
      notify:
        - Restart gunicorn

    - name: Copy systemd service for exonviz-web
      become: yes
      template:
        src: exonviz.service.j2
        dest: /etc/systemd/system/exonviz.service
      notify:
        - Reload systemd
        - Restart gunicorn

    - name: Copy gunicorn configuration
      become: yes
      template:
        src: gunicorn_config.py.j2
        dest: "{{ exonviz_dir }}/gunicorn_config.py"
        owner: "{{ user }}"
      notify:
        - Reload systemd
        - Restart gunicorn

    - name: Copy nginx configuration
      become: yes
      template:
        src: nginx.conf.j2
        dest: /etc/nginx/sites-available/exonviz.conf
      notify:
        - Restart nginx
      tags:
        - never

    - name: Remove default nginx site
      become: yes
      ansible.builtin.file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: Enable exonviz site
      become: yes
      ansible.builtin.file:
        src: /etc/nginx/sites-available/exonviz.conf
        dest: /etc/nginx/sites-enabled/exonviz
        state: link


  # Handlers
  handlers:
    - name: Reload systemd
      become: yes
      command: systemctl daemon-reload

    - name: Restart gunicorn
      become: true
      service:
        name: exonviz
        state: restarted

    - name: Restart nginx
      become: true
      service:
        name: nginx
        state: restarted
