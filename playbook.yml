---
- hosts: all
  vars:
    repo_url: https://github.com/Redmar-van-den-Berg/exonviz-web.git
    exonviz_dir: /opt/exonviz
    user: dcrt
    flask_secret_key: !vault |
              $ANSIBLE_VAULT;1.1;AES256
              37663330356232663466306434313762383464336137303932646333633333313263346131633565
              6365653739343133626234373534313934633037396364360a383738623035633264626333393234
              37373535623864393865313832386366633062353431376561316131323533646336633534633261
              3439393865393933310a663532393235393436353434623835346639353231303631393535376265
              63366663363737343933616338626164316436316165643861383963366135646437316434396236
              33316137306532623663386261313332363431613134646533386365336339303830313237353831
              63306531346532343136346131346439383036333461373461393130373337616263323163636462
              66626464333033643730396633656565306637343861613936633535393636393231303663323337
              39626664343632303663363265623439326434643239323833323731633565616439613630376132
              31633236653734366339333761666535386431636561363666373064383839363735353961616338
              633631666666393731326334346537393963

  pre_tasks:
    - name: Update APT cache
      become: yes
      apt:
        update_cache: yes
        force_apt_get: yes
  tasks:
    - name: Install packages
      become: yes
      apt:
        name:
          - acl
          - git
          - nginx
          - python3-pip
          - python3-virtualenv
          - python3-setuptools
        state: present

    - name: Set timezone
      become: yes
      community.general.timezone:
        name: Europe/Brussels

    - name: Create dcrt user
      become: yes
      ansible.builtin.user:
        name: "{{ user }}"

    - name: Create exonviz directory
      become: yes
      file:
        path: "{{ exonviz_dir }}"
        state: directory
        mode: '0755'
        owner: "{{ user }}"

    - name: Create virtualenv
      become: yes
      become_user: "{{ user }}"
      # Since we use forcereinstall, the venv always changes to the latest version
      changed_when: true
      ansible.builtin.pip:
        name:
          - "git+{{ repo_url }}"
          - gunicorn
        virtualenv: "{{ exonviz_dir }}/venv"
        state: forcereinstall
      notify:
        - Restart gunicorn

    - name: Copy systemd service for exonviz-web
      become: yes
      template:
        src: exonviz.service.j2
        dest: /etc/systemd/system/exonviz.service
      notify:
        - Reload systemd
        - Restart gunicorn

    - name: Copy gunicorn configuration
      become: yes
      template:
        src: gunicorn_config.py.j2
        dest: "{{ exonviz_dir }}/gunicorn_config.py"
        owner: "{{ user }}"
      notify:
        - Reload systemd
        - Restart gunicorn

    - name: Copy nginx configuration
      become: yes
      template:
        src: nginx.conf.j2
        dest: /etc/nginx/sites-available/exonviz.conf
      notify:
        - Restart nginx
      tags:
        - never

    - name: Remove default nginx site
      become: yes
      ansible.builtin.file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: Enable exonviz site
      become: yes
      ansible.builtin.file:
        src: /etc/nginx/sites-available/exonviz.conf
        dest: /etc/nginx/sites-enabled/exonviz
        state: link

    - name: Configure logrotate for nginx
      become: yes
      ansible.builtin.lineinfile:
        path: /etc/logrotate.d/nginx
        regexp: "\tdaily$"
        line: "\tyearly"



  # Handlers
  handlers:
    - name: Reload systemd
      become: yes
      command: systemctl daemon-reload

    - name: Restart gunicorn
      become: true
      service:
        name: exonviz
        state: restarted

    - name: Restart nginx
      become: true
      service:
        name: nginx
        state: restarted
