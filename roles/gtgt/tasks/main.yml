- name: Install packages
  become: yes
  apt:
    name:
      - python3-pip
      - python3-virtualenv
      - python3-setuptools
    state: present

- name: Create project directory
  become: yes
  file:
    path: "{{ install_dir }}"
    state: directory
    mode: '0755'
    owner: "{{ user }}"

- name: Create virtualenv
  become: yes
  become_user: "{{ user }}"
  # Since we use forcereinstall, the venv always changes to the latest version
  changed_when: true
  ansible.builtin.pip:
    name:
      - gtgt[webserver]
      - gunicorn
    virtualenv: "{{ install_dir }}/venv"
    state: forcereinstall
  notify:
    - Restart gunicorn
    - Restart gtgt

- name: Copy gunicorn configuration
  become: yes
  template:
    src: gunicorn_config.py.j2
    dest: "{{ install_dir }}/gunicorn_config.py"
    owner: "{{ user }}"
  notify:
    - Reload systemd
    - Restart gunicorn

- name: Copy nginx configuration
  become: yes
  template:
    src: "nginx-{{ project }}.conf.j2"
    dest: "/etc/nginx/sites-available/{{ project }}.conf"
  notify:
    - Restart nginx
  tags:
    - never

- name: Create folder for mutalyzer cache
  become: yes
  file:
    path: "{{ mutalyzer_cache }}"
    state: directory
    mode: '0755'
    owner: "{{ user }}"

- name: Copy mutalyzer configuration
  become: yes
  template:
    src: "mutalyzer-config.txt.j2"
    dest: "{{ install_dir }}/mutalyzer-config.txt"

- name: Enable project website
  become: yes
  ansible.builtin.file:
    src: "/etc/nginx/sites-available/{{ project }}.conf"
    dest: "/etc/nginx/sites-enabled/{{ project }}"
    state: link

- name: Copy systemd service for project
  become: yes
  template:
    src: "{{ project }}.service.j2"
    dest: "/etc/systemd/system/{{ project }}.service"
  notify:
    - Reload systemd
    - Restart gunicorn

- name: Enable systemd service for project
  become: true
  service:
    name: "{{ project }}"
    enabled: yes
    state: started
